mads 2.0.6 build 58 (28 Jan 17)
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\test\display_list.asm
     1 					ICL 'display_list_const.asm'
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\test\display_list_const.asm
     1 = 0230			DLIST   = $230
     2 = 0230			DLISTL  = $230 ; display list pointer low byte
     3 = 0231			DLISTH  = $231 ;                      high byte
     4 = 02C8			COLRBK  = $2C8
     5 = D01A			COLBG	= $D01A 
     6 = D016			COLPF0	= $D016  
     7 = D017			COLPF1	= $D017  
     8 = D018			COLPF2	= $D018  
     9 = D019			COLPF3	= $D019
    10 = 02C4			COLOR0	= $02C4
    11 = 02C5			COLOR1	= $02C5
    12 = 02C6			COLOR2	= $02C6
    13 = 02C7			COLOR3	= $02C7
    14 = 02C8			COLOR4 	= $02C8
    15 = 022F			SDMCTL  = $022F
    16 = D400			DMACTL  = $D400
    17 = 0200			VDSLST  = $0200 ; display list interrupt vector
    18 = D40E			NMEN	= $D40E
    19 = D40E			NMIEN	= $D40E ; bit 7
    20 = D40A			WSYNC   = $D40A
    21 = D40B			VCOUNT  = $D40B
    22
    23 = 0000			COLOR_BLACK = $00
    24 = 000E			COLOR_WHITE = $0E
    25
    26
    27
    28 				;     SAVMSC $0058,2       (88): pointer to current screen for CIO commands
    29 				;     RAMTOP $006A        (106): start-of-ROM pointer (MSB only)
    30 				;     VDSLST $0200,2      (512): DLI vector
    31 				;     RAMSIZ $02E4        (740): permanent start-of-ROM pointer (MSB only)
    32 				;     DLISTL $D402      (54274): display list pointer low byte
    33 				;     DLISTH $D403      (54275):     "    high byte
    34 				;     HSCROL $D404      (54276): horizontal scroll register
    35 				;     VSCROL $D405      (54277): vertical scroll register
    36 				;     NMIEN  $D40E      (54286): NMI enable (DLIs)
    37 				;     
    38 				;     
    39 				;                               Shadow registers
    40 				;     
    41 				;     
    42 				;     SDLSTL $0230        (560): DLISTL
    43 				;     SDLSTH $0231        (561): DLISTH
     2
     3 					org $3800
     4
     5 				; DL for first buffer	
     6 FFFF> 3800-39E8> 70 70 + dl_antic_1	dta $70,$70,$70              ; 3x8 empty scanlines
     7 3803 F0					dta $F0
     8 3804 4F 00 00				dta b($4f),a(screen_mem_1)   ; $0f - mode, $40 - addr of 1/3 screen bitmap 
     9 3807 0F 0F 0F 0F 0F 0F + 		:63 dta b($0f)               ; 63 lines of $0f 
    10 3846 4F 00 00				dta b($4f),a(screen_mem_1_1) ; $0f - mode, $40 - addr of 2/3 screen bitmap
    11 3849 0F 0F 0F 0F 0F 0F + 		:63 dta b($0f)	             ; 63 lines of $0f 
    12 3888 4F 00 00				dta b($4f),a(screen_mem_1_2) ; $0f - mode, $40 - addr of 3/3 screen bitmap
    13 388B 0F 0F 0F 0F 0F 0F + 		:63 dta b($0f)               ; 63 lines of $0f
    14 						;dta b($c1),a(dl_antic_1)     ; jump to DL start and trigger interrupt
    15 38CA 41 00 38				dta b($41),a(dl_antic_1)     ; jump to DL start
    16 38CD 70 70 70		dl_antic_2	dta $70,$70,$70              ; 3x8 empty scanlines 
    17 38D0 F0					dta $F0
    18 38D1 4F 00 00				dta b($4f),a(screen_mem_2)   ; $0f - mode, $40 - addr of 1/3 screen bitmap
    19 38D4 0F 0F 0F 0F 0F 0F + 		:63 dta b($0f)               ; 63 lines of $0f 
    20 3913 4F 00 00				dta b($4f),a(screen_mem_2_1) ; $0f - mode, $40 - addr of 2/3 screen bitmap
    21 3916 0F 0F 0F 0F 0F 0F + 		:63 dta b($0f)	             ; 63 lines of $0f 
    22 3955 4F 00 00				dta b($4f),a(screen_mem_2_2) ; $0f - mode, $40 - addr of 3/3 screen bitmap
    23 3958 0F 0F 0F 0F 0F 0F + 		:63 dta b($0f)               ; 63 lines of $0f 
    24 						;dta b($c1),a(dl_antic_2)     ; jump to DL start and trigger interrupt
    25 3997 41 CD 38				dta b($41),a(dl_antic_2)     ; jump to DL start 
    26
    27 399A			dl_set_mode
    28 					; set screen width to 32 byte
    29 399A A9 FD			lda #$fd
    30 399C 2D 2F 02			and SDMCTL
    31 399F 18 69 01			add #1
    32 39A2 8D 2F 02			sta SDMCTL
    33 39A5 8D 00 D4			sta DMACTL
    34
    35 					; set colors
    36 39A8 A9 00			lda #COLOR_BLACK      ; black
    37 39AA 8D C4 02			sta COLOR0
    38 39AD A9 0E			lda #COLOR_WHITE      ; black
    39 39AF 8D C5 02			sta COLOR1
    40 39B2 A9 0E			lda #COLOR_WHITE     ; white
    41 39B4 8D C6 02			sta COLOR2
    42 39B7 A9 0E			lda #COLOR_WHITE      ; black
    43 39B9 8D C7 02			sta COLOR3
    44 39BC A9 0E			lda #COLOR_WHITE     ; white
    45 39BE 8D C8 02			sta COLOR4
    46 39C1 A9 0E			lda #COLOR_WHITE     ; white
    47 39C3 8D 1A D0			sta COLBG
    48
    49 39C6 60				rts
    50
    51 39C7			set_screen_1:
    52 					; load display list address to register
    53 39C7 A9 00 8D 30 02 A9 + 	mwa #dl_antic_1 DLIST
    54 					; switch working buffer pointer
    55 39D1 A9 00 85 00 85 00		mwa #screen_mem_2 screen_adr
    56 39D7 60				rts
    57
    58 39D8			set_screen_2:
    59 					; load display list address to register
    60 39D8 A9 CD 8D 30 02 A9 + 	mwa #dl_antic_2 DLIST
    61 					; switch working buffer pointer
    62 39E2 A9 00 85 00 85 00		mwa #screen_mem_1 screen_adr
    63 39E8 60				rts
    64 						
