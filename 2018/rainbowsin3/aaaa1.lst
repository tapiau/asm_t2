mads 2.0.6 build 58 (28 Jan 17)
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\aaaa1.asm
     1 					ICL 'macro.asm'
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\macro.asm
     1 				.MACRO REG_PUSH 
     2 					pha
     3 					txa
     4 					pha
     5 					tya
     6 					pha
     7 				.ENDM
     8
     9 				.MACRO REG_PULL
    10 					pla
    11 					tay
    12 					pla
    13 					tax
    14 					pla
    15 				.ENDM
    16
    17 				.MACRO LINE_NOP_SPACE_1
    18 					nop
    19 					nop
    20 					nop
    21 					nop
    22 					nop
    23 					nop
    24 					nop
    25 					nop
    26 					nop
    27 					nop
    28 				
    29 					nop
    30 					nop
    31 				.ENDM
    32
    33 				.MACRO LINE_NOP_SPACE_2
    34 					nop
    35 					nop
    36 					nop
    37 				.ENDM
    38
    39 				.MACRO LINE_WAIT
    40 					sta WSYNC	;WAIT
    41 				.ENDM
    42
    43 				.MACRO LINE_COLOR_CALC
    44 					dex
    45 					dey
    46 				.ENDM
    47
    48 				.MACRO LINE_NOP_HALF
    49 					LINE_WAIT
    50 				
    51 					;; 4 nops
    52 					LINE_COLOR_CALC
    53 					
    54 					LINE_NOP_SPACE_1
    55 					
    56 					sta bar_color20	; 3 cycles
    57 					stx DLI_PAPER	; 4 cycles
    58 					LINE_NOP_SPACE_2
    59 					sty DLI_PAPER	; 4 cycles
    60 				
    61 					dey
    62 				.ENDM
    63
    64 				.MACRO LINE_NOP_NORMAL
    65 					LINE_WAIT
    66 				
    67 					;; 4 nops
    68 					LINE_COLOR_CALC
    69 					LINE_NOP_SPACE_1
    70 					
    71 					stx DLI_PAPER	; 4 cycles
    72 					LINE_NOP_SPACE_2
    73 					nop
    74 					sty DLI_PAPER	; 4 cycles
    75 				
    76 					dey
    77 				.ENDM
    78
    79 				.MACRO LINE_NOP_SHORT
    80 					LINE_WAIT
    81 				
    82 					;; 4 nops
    83 					LINE_COLOR_CALC
    84 					LINE_NOP_SPACE_1
    85 					
    86 					stx DLI_PAPER	; 4 cycles
    87 					LINE_NOP_SPACE_2
    88 					sty DLI_PAPER	; 4 cycles
    89 				
    90 					dey
    91 				.ENDM
     2
     3 					org $2000
     4
     5 					.proc main
     6 					
     7 FFFF> 2000-202D> 4C 0A + 	jmp part1
     8
     9 					.endp
    10 					
    11 2003				ICL 'part1.asm'
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     1 2003 00			part1_x dta 0
     2 2004 00			part1_y dta 0
     3 2005 00			part1_d dta 0
     4 2006 00			TMPCLR dta 0
     5
     6 2007 00			part1_tmpx dta 0
     7 2008 00			part1_tmpy dta 0
     8 2009 00			part1_sync: dta 0
     9
    10 200A			part1:
    11 					; set handler for display list interrupt 
    12 200A A9 00 8D 00 02 A9 + 	mwa #part1_dli_handler VDSLST
    13 2014 20 98 39			jsr dl_set_mode
    14
    15 					; enable DL interrupt
    16 2017 A9 C0			lda #$c0
    17 2019 8D 0E D4			sta NMIEN
    18
    19 201C 20 5F 70			jsr screen_set_write_1
    20 201F 20 02 70			jsr screen_clear
    21 				;	jsr screen_fill
    22 2022 20 54 70			jsr screen_set_read_1
    23
    24 2025			part1_0:
    25 					
    26 2025 4C 25 20			jmp part1_0
    27
    28
    29 2028				REG_PULL
Macro: REG_PULL [Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\macro.asm]
     1 2028 68				pla
     2 2029 A8				tay
     3 202A 68				pla
     4 202B AA				tax
     5 202C 68				pla
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
    30
    31 202D 60				rts
    32
    33 202E				org $3000
    34
    35 3000			part1_dli_handler:
    36
    37 				; line:
    38 				; 32 cycles - frame (2+26+4)
    39 				; 28 cycles - screen
    40
    41 3000				REG_PUSH
Macro: REG_PUSH [Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\macro.asm]
     1 3000-30E7> 48			pha
     2 3001 8A				txa
     3 3002 48				pha
     4 3003 98				tya
     5 3004 48				pha
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
    42 3005 A9 00			lda #COLOR_BLACK
    43 3007 8D 18 D0			sta DLI_PAPER ; black
    44
    45
    46 					; bar size
    47 300A A9 02			lda #2
    48 300C 85 E6			sta bar_size
    49
    50 300E 8D 0A D4			:1 sta WSYNC	;WAIT
    51 					
    52 					; cycle begin
    53 3011 A2 01			ldx #1
    54 3013 8D 0A D4			:1 sta WSYNC	;WAIT
    55
    56 				;	lda math_sin_16,x
    57 				;	:4 lsr
    58 				;	adc #1
    59 				;	tax
    60
    61 3016 8D 0A D4 8D 0A D4 + 	:20 sta WSYNC	;WAIT
    62
    63 					; init color value
    64 3052 A4 14			ldy RTCLOCK_0
    65 3054 B9 00 1D			lda math_sin,y
    66 3057 85 E7			sta bar_color1
    67 3059 98				tya
    68 305A 49 FF			eor #$ff
    69 305C A8				tay
    70 305D B9 00 1D			lda math_sin,y
    71 3060 85 E8			sta bar_color2
    72
    73 3062 8D 0A D4			:1 sta WSYNC	;WAIT
    74
    75 					; 192 screen lines
    76
    77
    78 3065 A6 E7			ldx bar_color1
    79 3067 A4 E8			ldy bar_color2
    80
    81 3069				LINE_NOP_HALF
Macro: LINE_NOP_HALF [Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\macro.asm]
     1 3069 8D 0A D4			sta WSYNC	;WAIT
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     1 306C CA				dex
     2 306D 88				dey
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     1 306E EA				nop
     2 306F EA				nop
     3 3070 EA				nop
     4 3071 EA				nop
     5 3072 EA				nop
     6 3073 EA				nop
     7 3074 EA				nop
     8 3075 EA				nop
     9 3076 EA				nop
    10 3077 EA				nop
    12 3078 EA				nop
    13 3079 EA				nop
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     8 307A 85 EA			sta bar_color20	; 3 cycles
     9 307C 8E 18 D0			stx DLI_PAPER	; 4 cycles
     1 307F EA				nop
     2 3080 EA				nop
     3 3081 EA				nop
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
    11 3082 8C 18 D0			sty DLI_PAPER	; 4 cycles
    13 3085 88				dey
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
    82 3086				LINE_NOP_NORMAL
Macro: LINE_NOP_NORMAL [Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\macro.asm]
     1 3086 8D 0A D4			sta WSYNC	;WAIT
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     1 3089 CA				dex
     2 308A 88				dey
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     1 308B EA				nop
     2 308C EA				nop
     3 308D EA				nop
     4 308E EA				nop
     5 308F EA				nop
     6 3090 EA				nop
     7 3091 EA				nop
     8 3092 EA				nop
     9 3093 EA				nop
    10 3094 EA				nop
    12 3095 EA				nop
    13 3096 EA				nop
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     7 3097 8E 18 D0			stx DLI_PAPER	; 4 cycles
     1 309A EA				nop
     2 309B EA				nop
     3 309C EA				nop
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     9 309D EA				nop
    10 309E 8C 18 D0			sty DLI_PAPER	; 4 cycles
    12 30A1 88				dey
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
    83
    84 30A2 A9 37			lda #55
    85 30A4			dli_handler_loop_0:
    86 30A4				LINE_NOP_NORMAL
Macro: LINE_NOP_NORMAL [Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\macro.asm]
     1 30A4 8D 0A D4			sta WSYNC	;WAIT
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     1 30A7 CA				dex
     2 30A8 88				dey
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     1 30A9 EA				nop
     2 30AA EA				nop
     3 30AB EA				nop
     4 30AC EA				nop
     5 30AD EA				nop
     6 30AE EA				nop
     7 30AF EA				nop
     8 30B0 EA				nop
     9 30B1 EA				nop
    10 30B2 EA				nop
    12 30B3 EA				nop
    13 30B4 EA				nop
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     7 30B5 8E 18 D0			stx DLI_PAPER	; 4 cycles
     1 30B8 EA				nop
     2 30B9 EA				nop
     3 30BA EA				nop
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     9 30BB EA				nop
    10 30BC 8C 18 D0			sty DLI_PAPER	; 4 cycles
    12 30BF 88				dey
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
    87 30C0 E9 01			sbc #1
    88 30C2 D0 E0			bne dli_handler_loop_0
    89 30C4				LINE_NOP_SHORT
Macro: LINE_NOP_SHORT [Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\macro.asm]
     1 30C4 8D 0A D4			sta WSYNC	;WAIT
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     1 30C7 CA				dex
     2 30C8 88				dey
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     1 30C9 EA				nop
     2 30CA EA				nop
     3 30CB EA				nop
     4 30CC EA				nop
     5 30CD EA				nop
     6 30CE EA				nop
     7 30CF EA				nop
     8 30D0 EA				nop
     9 30D1 EA				nop
    10 30D2 EA				nop
    12 30D3 EA				nop
    13 30D4 EA				nop
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     7 30D5 8E 18 D0			stx DLI_PAPER	; 4 cycles
     1 30D8 EA				nop
     2 30D9 EA				nop
     3 30DA EA				nop
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
     9 30DB 8C 18 D0			sty DLI_PAPER	; 4 cycles
    11 30DE 88				dey
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
    90 					
    91
    92 30DF				LINE_WAIT
Macro: LINE_WAIT [Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\macro.asm]
     1 30DF 8D 0A D4			sta WSYNC	;WAIT
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
    93
    94 30E2				REG_PULL
Macro: REG_PULL [Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\macro.asm]
     1 30E2 68				pla
     2 30E3 A8				tay
     3 30E4 68				pla
     4 30E5 AA				tax
     5 30E6 68				pla
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\part1.asm
    95 30E7 40				rti
    96 					
    97 					
    98 					
    12 30E8				ICL 'screen_mem.asm'
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\screen_mem.asm
     1 30E8				org $4000
     2
     3 4000			screen_mem_1
     4 4000-707F> 00 00 00 00 + 	:2048 dta $0
     5 4800			screen_mem_1_1
     6 4800 00 00 00 00 00 00 + 	:2048 dta $0
     7 5000			screen_mem_1_2
     8 5000 00 00 00 00 00 00 + 	:2048 dta $0
     9 					
    10 5800			screen_mem_2
    11 5800 00 00 00 00 00 00 + 	:2048 dta $0
    12 6000			screen_mem_2_1
    13 6000 00 00 00 00 00 00 + 	:2048 dta $0
    14 6800			screen_mem_2_2
    15 6800 00 00 00 00 00 00 + 	:2048 dta $0
    16
    17 7000			screen_adr
    18 7000 00 00			dta 0,0
    19
    20 7002			screen_clear:
    21 7002				REG_PUSH
Macro: REG_PUSH [Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\macro.asm]
     1 7002 48				pha
     2 7003 8A				txa
     3 7004 48				pha
     4 7005 98				tya
     5 7006 48				pha
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\screen_mem.asm
    22 7007 AD 00 70 8D 1A 70 + 	mwa screen_adr screen_clear_loop_2+1
    23 7013 A9 00			lda #0
    24 7015 A2 18			ldx #24
    25 7017			screen_clear_loop_1
    26 7017 A0 00			ldy #0	
    27 7019			screen_clear_loop_2	
    28 7019 99 00 00			sta $0000,y
    29 701C C8				iny
    30 701D D0 FA			bne screen_clear_loop_2
    31 701F EE 1B 70			inc screen_clear_loop_2+2
    32 7022 CA				dex
    33 7023 D0 F4			bne screen_clear_loop_2
    34 7025				REG_PULL
Macro: REG_PULL [Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\macro.asm]
     1 7025 68				pla
     2 7026 A8				tay
     3 7027 68				pla
     4 7028 AA				tax
     5 7029 68				pla
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\screen_mem.asm
    35 702A 60				rts	
    36
    37 702B			screen_fill:
    38 702B				REG_PUSH
Macro: REG_PUSH [Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\macro.asm]
     1 702B 48				pha
     2 702C 8A				txa
     3 702D 48				pha
     4 702E 98				tya
     5 702F 48				pha
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\screen_mem.asm
    39 7030 AD 00 70 8D 43 70 + 	mwa screen_adr screen_fill_loop_2+1
    40 703C A9 FF			lda #255
    41 703E A2 08			ldx #8
    42 7040			screen_fill_loop_1
    43 7040 A0 00			ldy #0	
    44 7042			screen_fill_loop_2	
    45 7042 99 00 00			sta $0000,y
    46 7045 C8				iny
    47 7046 D0 FA			bne screen_fill_loop_2
    48 7048 EE 44 70			inc screen_fill_loop_2+2
    49 704B CA				dex
    50 704C D0 F4			bne screen_fill_loop_2
    51 704E				REG_PULL
Macro: REG_PULL [Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\macro.asm]
     1 704E 68				pla
     2 704F A8				tay
     3 7050 68				pla
     4 7051 AA				tax
     5 7052 68				pla
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\screen_mem.asm
    52 7053 60				rts	
    53
    54 					
    55 7054			screen_set_read_1:
    56 					; load display list address to register
    57 7054 A9 00 8D 30 02 A9 + 	mwa #dl_antic_1 DLIST
    58 705E 60				rts
    59 705F			screen_set_write_1:
    60 					; switch working buffer pointer
    61 705F A9 00 8D 00 70 A9 + 	mwa #screen_mem_1 screen_adr
    62 7069 60				rts
    63
    64 706A			screen_set_read_2:
    65 					; load display list address to register
    66 706A A9 CC 8D 30 02 A9 + 	mwa #dl_antic_2 DLIST
    67 7074 60				rts
    68 7075			screen_set_write_2:	
    69 					; switch working buffer pointer
    70 7075 A9 00 8D 00 70 A9 + 	mwa #screen_mem_2 screen_adr
    71 707F 60				rts
    72 					
    13 7080				ICL 'display_list.asm'
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\display_list.asm
     1 7080				ICL 'display_list_const.asm'
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\display_list_const.asm
     1 = 0012			RTCLOCK_2 = $12
     2 = 0013			RTCLOCK_1 = $13
     3 = 0014			RTCLOCK_0 = $14
     4
     5 = 0230			DLIST   = $230
     6 = 0230			DLISTL  = $230 ; display list pointer low byte
     7 = 0231			DLISTH  = $231 ;                      high byte
     8 = 02C8			COLRBK  = $2C8
     9
    10 = D016			COLPF0	= $D016  
    11 = D017			COLPF1	= $D017  
    12 = D018			COLPF2	= $D018  
    13 = D019			COLPF3	= $D019
    14 = D01A			COLBG	= $D01A 
    15
    16 = 02C4			COLOR0	= $02C4
    17 = 02C5			COLOR1	= $02C5
    18 = 02C6			COLOR2	= $02C6
    19 = 02C7			COLOR3	= $02C7
    20 = 02C8			COLOR4 	= $02C8
    21
    22 = 022F			SDMCTL  = $022F
    23 = D400			DMACTL  = $D400
    24 = 0200			VDSLST  = $0200 ; display list interrupt vector
    25 = D40E			NMEN	= $D40E
    26 = D40E			NMIEN	= $D40E ; bit 7
    27 = D40A			WSYNC   = $D40A
    28 = D40B			VCOUNT  = $D40B
    29
    30 = 02C5			GR8_PEN   = COLOR1
    31 = 02C6			GR8_PAPER = COLOR2
    32 = 02C8			GR8_FRAME = COLOR4 
    33
    34 = D017			DLI_PEN   = COLPF1
    35 = D018			DLI_PAPER = COLPF2
    36 = D01A			DLI_FRAME = COLBG 
    37
    38 = 0000			COLOR_BLACK = $00
    39 = 000E			COLOR_WHITE = $0E
    40
    41
    42
    43 				;     SAVMSC $0058,2       (88): pointer to current screen for CIO commands
    44 				;     RAMTOP $006A        (106): start-of-ROM pointer (MSB only)
    45 				;     VDSLST $0200,2      (512): DLI vector
    46 				;     RAMSIZ $02E4        (740): permanent start-of-ROM pointer (MSB only)
    47 				;     DLISTL $D402      (54274): display list pointer low byte
    48 				;     DLISTH $D403      (54275):     "    high byte
    49 				;     HSCROL $D404      (54276): horizontal scroll register
    50 				;     VSCROL $D405      (54277): vertical scroll register
    51 				;     NMIEN  $D40E      (54286): NMI enable (DLIs)
    52 				;     
    53 				;     
    54 				;                               Shadow registers
    55 				;     
    56 				;     
    57 				;     SDLSTL $0230        (560): DLISTL
    58 				;     SDLSTH $0231        (561): DLISTH
     2
     3 7080				org $3800
     4
     5 = 0080			DL_DLI = $80
     6
     7 				; DL for first buffer	
     8 3800-39C7> F0 70 70	dl_antic_1	dta $F0,$70,$70              ; 3x8 empty scanlines
     9 3803 4F 00 40				dta b($4f),a(screen_mem_1)   ; $0f - mode, $40 - addr of 1/3 screen bitmap 
    10 3806 0F 0F 0F 0F 0F 0F + 		:62 dta b($0f)               ; 63 lines of $0f 
    11 3844 0F					dta b($0f)                   ; 1 line of $0f + DLI 
    12 3845 4F 00 48				dta b($4f),a(screen_mem_1_1) ; $0f - mode, $40 - addr of 2/3 screen bitmap
    13 3848 0F 0F 0F 0F 0F 0F + 		:63 dta b($0f)	             ; 63 lines of $0f 
    14 3887 4F 00 50				dta b($4f),a(screen_mem_1_2) ; $0f - mode, $40 - addr of 3/3 screen bitmap
    15 388A 0F 0F 0F 0F 0F 0F + 		:63 dta b($0f)               ; 63 lines of $0f
    16 						;dta b($c1),a(dl_antic_1)     ; jump to DL start and trigger interrupt
    17 38C9 41 00 38				dta b($41),a(dl_antic_1)     ; jump to DL start
    18 38CC 70 70 70		dl_antic_2	dta $70,$70,$70              ; 3x8 empty scanlines 
    19 38CF CF 00 58				dta b($cf),a(screen_mem_2)   ; $0f - mode, $40 - addr of 1/3 screen bitmap
    20 38D2 0F 0F 0F 0F 0F 0F + 		:63 dta b($0f)               ; 63 lines of $0f 
    21 3911 4F 00 60				dta b($4f),a(screen_mem_2_1) ; $0f - mode, $40 - addr of 2/3 screen bitmap
    22 3914 0F 0F 0F 0F 0F 0F + 		:63 dta b($0f)	             ; 63 lines of $0f 
    23 3953 4F 00 68				dta b($4f),a(screen_mem_2_2) ; $0f - mode, $40 - addr of 3/3 screen bitmap
    24 3956 0F 0F 0F 0F 0F 0F + 		:63 dta b($0f)               ; 63 lines of $0f 
    25 						;dta b($c1),a(dl_antic_2)     ; jump to DL start and trigger interrupt
    26 3995 41 CC 38				dta b($41),a(dl_antic_2)     ; jump to DL start 
    27
    28 3998			dl_set_mode
    29 					; set screen width to 32 byte
    30 3998 A9 FD			lda #$fd
    31 399A 2D 2F 02			and SDMCTL
    32 399D 18 69 01			add #1
    33 39A0 8D 2F 02			sta SDMCTL
    34 39A3 8D 00 D4			sta DMACTL
    35
    36 39A6 A9 00			lda #COLOR_BLACK     
    37 39A8 8D C5 02			sta GR8_PEN
    38 39AB A9 00			lda #COLOR_BLACK     
    39 39AD 8D C6 02			sta GR8_PAPER
    40 39B0 A9 00			lda #COLOR_BLACK     
    41 39B2 8D C8 02			sta GR8_FRAME
    42
    43 39B5 60				rts
    44
    45 						
    14 39B6				ICL 'wait_vsync.asm'
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\wait_vsync.asm
     1
     2
     3 39B6			wait_hsync:
     4
     5 39B6 48				pha
     6
     7 39B7 A9 52			lda #$52
     8 39B9 8D 0A D4			sta WSYNC	;WAIT
     9 39BC 68				pla
    10
    11 39BD 60				rts
    12
    13
    14 39BE			wait_vsync:
    15 39BE 48				pha
    16 39BF			wait_vsync_loop:
    17 39BF AD 0B D4			lda VCOUNT
    18 39C2 C9 64			cmp #100
    19 39C4 D0 F9			bne wait_vsync_loop 
    20 					
    21 39C6 68				pla
    22 39C7 60				rts
    23 					
    15 39C8				ICL 'math.asm'
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\math.asm
     1 39C8				org $1D00
     2 					
     3 				;MATH_SIN_LEN = 16
     4 				;MATH_SIN_MASK = %00001111	
     5 				; math_sin dta 127,176,218,245,255,245,218,176,127,78,36,9,0,9,36,78
     6 				; math_sin dta 128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79
     7 				        
     8 				;MATH_SIN_LEN = 64
     9 				;MATH_SIN_MASK = %00111111	
    10 				;math_sin dta 128,140,152,165,176,188,198,208,218,226,234,240,245,250,253,254,255,254,253,250,245,240,234,226,218,208,198,188,176,165,152,140,128,115,103,90,79,67,57,47,37,29,21,15,10,5,2,1,0,1,2,5,10,15,21,29,37,47,57,67,79,90,103,115
    11
    12 = 0100			MATH_SIN_LEN = 256
    13 = 00FF			MATH_SIN_MASK = %11111111	
    14 1D00-1F0F> 80 83 86 89 + math_sin dta 128,131,134,137,140,143,146,149,152,155,158,162,165,167,170,173,176,179,182,185,188,190,193,196,198,201,203,206,208,211,213,215,218,220,222,224,226,228,230,232,234,235,237,238,240,241,243,244,245,246,248,249,250,250,251,252,253,253,254,254,254,255,255,255,255,255,255,255,254,254,254,253,253,252,251,250,250,249,248,246,245,244,243,241,240,238,237,235,234,232,230,228,226,224,222,220,218,215,213,211,208,206,203,201,198,196,193,190,188,185,182,179,176,173,170,167,165,162,158,155,152,149,146,143,140,137,134,131,128,124,121,118,115,112,109,106,103,100,97,93,90,88,85,82,79,76,73,70,67,65,62,59,57,54,52,49,47,44,42,40,37,35,33,31,29,27,25,23,21,20,18,17,15,14,12,11,10,9,7,6,5,5,4,3,2,2,1,1,1,0,0,0,0,0,0,0,1,1,1,2,2,3,4,5,5,6,7,9,10,11,12,14,15,17,18,20,21,23,25,27,29,31,33,35,37,40,42,44,47,49,52,54,57,59,62,65,67,70,73,76,79,82,85,88,90,93,97,100,103,106,109,112,115,118,121,124
    15
    16 = 0010			MATH_SIN_LEN_16 = 16
    17 = 000F			MATH_SIN_MASK_16 = %00001111	
    18 1E00 80 B0 DA F5 FF F5 + math_sin_16 dta 128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79,128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79
    19
    20 1F00 C0 C0 60 40 30 27 + math_192_div dta 192,192,96,64,48,39,32,28,24,22,20,18,16,15,14,13
    16 1F10				ICL 'zero.asm'
Source: C:\jac\wudsn\Workspace\Atari800\asm_t2\rainbowsin3\zero.asm
     1 1F10				org $e0
     2
     3 00E0-00EA> 00		zero_a	dta 0
     4 00E1 00			zero_x	dta 0
     5 00E2 00			zero_y	dta 0
     6 00E3 00			zero_1	dta 0
     7 00E4 00			zero_2	dta 0
     8 00E5 00			zero_3	dta 0
     9 00E6 00			bar_size dta 0
    10 00E7 00			bar_color1 dta 0
    11 00E8 00			bar_color2 dta 0
    12 00E9 00			bar_color10 dta 0
    13 00EA 00			bar_color20 dta 0
    17
    18 					
